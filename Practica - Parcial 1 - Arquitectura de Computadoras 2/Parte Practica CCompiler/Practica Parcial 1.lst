CCS PCM C Compiler, Version 5.025, 1977               16-ago.-22 16:12

               Filename:   C:\Users\Sandy González\OneDrive - Universidad Mariano Gálvez\Escritorio\Universidad\Semestre 8\Arquitectura de Computadoras II\Practica - Parcial 1 - Arquitectura de Computadoras 2\Parte Practica CCompiler\Practica Parcial 1.lst

               ROM used:   111 words (1%)
                           Largest free fragment is 2048
               RAM used:   7 (2%) at main() level
                           7 (2%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... #include <Practica Parcial 1.h> 
.................... #include <16F887.h> 
.................... //////////// Standard Header file for the PIC16F887 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F887 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=4000000) 
0004:  MOVLW  21
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
....................  
....................  
.................... #define portD 0x08 
....................  
.................... unsigned int8 count; 
....................  
.................... void main() 
0019:  MOVF   03,W
001A:  ANDLW  1F
001B:  MOVWF  03
001C:  BSF    03.5
001D:  BSF    03.6
001E:  MOVF   09,W
001F:  ANDLW  C0
0020:  MOVWF  09
0021:  BCF    03.6
0022:  BCF    1F.4
0023:  BCF    1F.5
0024:  MOVLW  00
0025:  BSF    03.6
0026:  MOVWF  08
0027:  BCF    03.5
0028:  CLRF   07
0029:  CLRF   08
002A:  CLRF   09
002B:  BCF    03.7
.................... { 
....................    while(TRUE) 
....................    { 
....................       output_high(PIN_B2); // PIN_B2=1 
002C:  BSF    03.5
002D:  BCF    03.6
002E:  BCF    06.2
002F:  BCF    03.5
0030:  BSF    06.2
....................       delay_ms(100); 
0031:  MOVLW  64
0032:  MOVWF  21
0033:  CALL   004
....................       output_low(PIN_B2); // PIN_B2=0 
0034:  BSF    03.5
0035:  BCF    06.2
0036:  BCF    03.5
0037:  BCF    06.2
....................       delay_ms(100); 
0038:  MOVLW  64
0039:  MOVWF  21
003A:  CALL   004
....................       while(input(PIN_B0)==1){ 
003B:  BSF    03.5
003C:  BSF    06.0
003D:  BCF    03.5
003E:  BTFSS  06.0
003F:  GOTO   04F
....................          output_high(PIN_B2); // PIN_B2=1 
0040:  BSF    03.5
0041:  BCF    06.2
0042:  BCF    03.5
0043:  BSF    06.2
....................          delay_ms(50); 
0044:  MOVLW  32
0045:  MOVWF  21
0046:  CALL   004
....................          output_low(PIN_B2); // PIN_B2=0 
0047:  BSF    03.5
0048:  BCF    06.2
0049:  BCF    03.5
004A:  BCF    06.2
....................          delay_ms(50); 
004B:  MOVLW  32
004C:  MOVWF  21
004D:  CALL   004
004E:  GOTO   03B
....................       } 
....................       if(input(PIN_B1)==1){ 
004F:  BSF    03.5
0050:  BSF    06.1
0051:  BCF    03.5
0052:  BTFSS  06.1
0053:  GOTO   06C
....................          output_d(count--); 
0054:  MOVF   20,W
0055:  DECF   20,F
0056:  MOVWF  21
0057:  BSF    03.5
0058:  CLRF   08
0059:  BCF    03.5
005A:  MOVF   21,W
005B:  MOVWF  08
....................          delay_ms(1); 
005C:  MOVLW  01
005D:  MOVWF  21
005E:  CALL   004
....................          if(count == 256) 
005F:  MOVF   20,W
0060:  SUBLW  00
0061:  BTFSC  03.2
....................             count = 0; 
0062:  CLRF   20
....................          while(input(PIN_B1)==0) 
0063:  BSF    03.5
0064:  BSF    06.1
0065:  BCF    03.5
0066:  BTFSC  06.1
0067:  GOTO   06C
....................             delay_ms(1); 
0068:  MOVLW  01
0069:  MOVWF  21
006A:  CALL   004
006B:  GOTO   063
....................       } 
006C:  BSF    03.6
006D:  GOTO   02C
....................    } 
.................... } 
006E:  SLEEP

Configuration Fuses:
   Word  1: 2CE1   XT NOWDT PUT MCLR NOPROTECT NOCPD NOBROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
